import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { JsonFormsI18nState, JsonFormsRendererRegistryEntry, JsonSchema, UISchemaElement, UISchemaTester, ValidationMode } from '@jsonforms/core';
import Ajv, { ErrorObject } from 'ajv';
import { JsonFormsAngularService } from './jsonforms.service';
export declare class JsonForms implements OnChanges, OnInit {
    private jsonformsService;
    uischema: UISchemaElement;
    schema: JsonSchema;
    data: any;
    renderers: JsonFormsRendererRegistryEntry[];
    uischemas: {
        tester: UISchemaTester;
        uischema: UISchemaElement;
    }[];
    dataChange: EventEmitter<any>;
    readonly: boolean;
    validationMode: ValidationMode;
    ajv: Ajv;
    config: any;
    i18n: JsonFormsI18nState;
    additionalErrors: ErrorObject[];
    errors: EventEmitter<ErrorObject<string, Record<string, any>, unknown>[]>;
    private previousData;
    private previousErrors;
    private initialized;
    oldI18N: JsonFormsI18nState;
    constructor(jsonformsService: JsonFormsAngularService);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
}
